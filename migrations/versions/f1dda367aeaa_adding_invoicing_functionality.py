"""Adding Invoicing functionality

Revision ID: f1dda367aeaa
Revises: 9f16760a81a2
Create Date: 2025-05-17 19:49:09.345865

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1dda367aeaa'
down_revision = '9f16760a81a2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coaching_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('rate_name', sa.String(length=50), nullable=False),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['coach_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coach_id', 'tennis_club_id', 'rate_name', name='unique_coach_rate_name')
    )
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED', 'PAID', name='invoicestatus'), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=True),
    sa.Column('deductions', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coach_id', 'tennis_club_id', 'month', 'year', name='unique_coach_invoice')
    )
    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.create_index('idx_invoice_coach', ['coach_id'], unique=False)
        batch_op.create_index('idx_invoice_date', ['year', 'month'], unique=False)
        batch_op.create_index('idx_invoice_status', ['status'], unique=False)

    op.create_table('invoice_line_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('register_id', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('is_deduction', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['register_id'], ['register.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invoice_line_item', schema=None) as batch_op:
        batch_op.create_index('idx_line_item_date', ['date'], unique=False)
        batch_op.create_index('idx_line_item_invoice', ['invoice_id'], unique=False)
        batch_op.create_index('idx_line_item_register', ['register_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoice_line_item', schema=None) as batch_op:
        batch_op.drop_index('idx_line_item_register')
        batch_op.drop_index('idx_line_item_invoice')
        batch_op.drop_index('idx_line_item_date')

    op.drop_table('invoice_line_item')
    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.drop_index('idx_invoice_status')
        batch_op.drop_index('idx_invoice_date')
        batch_op.drop_index('idx_invoice_coach')

    op.drop_table('invoice')
    op.drop_table('coaching_rate')
    # ### end Alembic commands ###
