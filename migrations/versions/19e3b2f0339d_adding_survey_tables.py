"""Adding survey tables

Revision ID: 19e3b2f0339d
Revises: efd70930408d
Create Date: 2025-06-12 06:53:03.058813

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '19e3b2f0339d'
down_revision = 'efd70930408d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('club_compliance_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('lia_completed', sa.Boolean(), nullable=True),
    sa.Column('lia_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lia_completed_by_id', sa.Integer(), nullable=True),
    sa.Column('lia_purpose_statement', sa.Text(), nullable=True),
    sa.Column('lia_balancing_assessment', sa.Text(), nullable=True),
    sa.Column('lia_safeguards', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('privacy_policy_updated', sa.Boolean(), nullable=True),
    sa.Column('privacy_policy_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('privacy_policy_url', sa.String(length=255), nullable=True),
    sa.Column('default_retention_days', sa.Integer(), nullable=True),
    sa.Column('data_retention_policy_url', sa.String(length=255), nullable=True),
    sa.Column('surveys_enabled', sa.Boolean(), nullable=True),
    sa.Column('surveys_enabled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('surveys_enabled_by_id', sa.Integer(), nullable=True),
    sa.Column('last_compliance_review', sa.DateTime(timezone=True), nullable=True),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.Column('requires_review', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['lia_completed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['surveys_enabled_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tennis_club_id')
    )
    op.create_table('survey_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('lawful_basis', sa.String(length=50), nullable=True),
    sa.Column('purpose_statement', sa.Text(), nullable=False),
    sa.Column('retention_days', sa.Integer(), nullable=True),
    sa.Column('max_frequency_days', sa.Integer(), nullable=True),
    sa.Column('allow_anonymous', sa.Boolean(), nullable=True),
    sa.Column('collect_contact_info', sa.Boolean(), nullable=True),
    sa.Column('send_reminder', sa.Boolean(), nullable=True),
    sa.Column('reminder_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('survey_template', schema=None) as batch_op:
        batch_op.create_index('idx_survey_template_active', ['tennis_club_id', 'is_active'], unique=False)
        batch_op.create_index('idx_survey_template_club', ['tennis_club_id'], unique=False)

    op.create_table('survey_campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'COMPLETED', 'ARCHIVED', name='surveystatus'), nullable=True),
    sa.Column('trigger_type', sa.Enum('MANUAL', 'END_OF_TERM', 'NEW_STUDENT', 'PERIODIC', 'COACHING_CHANGE', 'FACILITY_UPDATE', name='surveytriggertype'), nullable=True),
    sa.Column('teaching_period_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('coach_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_send_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_send_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reminder_send_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('close_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_recipients', sa.Integer(), nullable=True),
    sa.Column('emails_sent', sa.Integer(), nullable=True),
    sa.Column('emails_delivered', sa.Integer(), nullable=True),
    sa.Column('emails_bounced', sa.Integer(), nullable=True),
    sa.Column('responses_received', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['tennis_group.id'], ),
    sa.ForeignKeyConstraint(['teaching_period_id'], ['teaching_period.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['survey_template.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('survey_campaign', schema=None) as batch_op:
        batch_op.create_index('idx_survey_campaign_club', ['tennis_club_id'], unique=False)
        batch_op.create_index('idx_survey_campaign_schedule', ['scheduled_send_date'], unique=False)
        batch_op.create_index('idx_survey_campaign_status', ['status'], unique=False)

    op.create_table('survey_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.Enum('TEXT', 'TEXTAREA', 'RATING', 'MULTIPLE_CHOICE', 'YES_NO', 'NPS', name='surveyquestiontype'), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('help_text', sa.Text(), nullable=True),
    sa.Column('show_if_condition', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['survey_template.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('survey_question', schema=None) as batch_op:
        batch_op.create_index('idx_survey_question_template', ['template_id', 'order_index'], unique=False)

    op.create_table('survey_opt_out',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('opted_out_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('opted_back_in_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['survey_campaign.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tennis_club_id', 'email', name='unique_club_email_optout')
    )
    with op.batch_alter_table('survey_opt_out', schema=None) as batch_op:
        batch_op.create_index('idx_survey_opt_out_email', ['tennis_club_id', 'email'], unique=False)

    op.create_table('survey_recipient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('recipient_name', sa.String(length=100), nullable=True),
    sa.Column('student_name', sa.String(length=100), nullable=True),
    sa.Column('survey_token', sa.String(length=100), nullable=False),
    sa.Column('opt_out_token', sa.String(length=100), nullable=False),
    sa.Column('email_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_bounced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_opened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('survey_opened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('survey_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reminder_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['survey_campaign.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opt_out_token'),
    sa.UniqueConstraint('survey_token')
    )
    with op.batch_alter_table('survey_recipient', schema=None) as batch_op:
        batch_op.create_index('idx_survey_recipient_campaign', ['campaign_id'], unique=False)
        batch_op.create_index('idx_survey_recipient_email', ['tennis_club_id', 'email'], unique=False)
        batch_op.create_index('idx_survey_recipient_expires', ['expires_at'], unique=False)
        batch_op.create_index('idx_survey_recipient_token', ['survey_token'], unique=False)

    op.create_table('survey_response',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('tennis_club_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('responses', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('respondent_type', sa.String(length=50), nullable=True),
    sa.Column('student_age_group', sa.String(length=20), nullable=True),
    sa.Column('group_name', sa.String(length=50), nullable=True),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.Column('completion_time_seconds', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('retention_expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('anonymized_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['survey_campaign.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['survey_recipient.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['survey_template.id'], ),
    sa.ForeignKeyConstraint(['tennis_club_id'], ['tennis_club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('survey_response', schema=None) as batch_op:
        batch_op.create_index('idx_survey_response_campaign', ['campaign_id'], unique=False)
        batch_op.create_index('idx_survey_response_club', ['tennis_club_id', 'submitted_at'], unique=False)
        batch_op.create_index('idx_survey_response_retention', ['retention_expires_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('survey_response', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_response_retention')
        batch_op.drop_index('idx_survey_response_club')
        batch_op.drop_index('idx_survey_response_campaign')

    op.drop_table('survey_response')
    with op.batch_alter_table('survey_recipient', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_recipient_token')
        batch_op.drop_index('idx_survey_recipient_expires')
        batch_op.drop_index('idx_survey_recipient_email')
        batch_op.drop_index('idx_survey_recipient_campaign')

    op.drop_table('survey_recipient')
    with op.batch_alter_table('survey_opt_out', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_opt_out_email')

    op.drop_table('survey_opt_out')
    with op.batch_alter_table('survey_question', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_question_template')

    op.drop_table('survey_question')
    with op.batch_alter_table('survey_campaign', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_campaign_status')
        batch_op.drop_index('idx_survey_campaign_schedule')
        batch_op.drop_index('idx_survey_campaign_club')

    op.drop_table('survey_campaign')
    with op.batch_alter_table('survey_template', schema=None) as batch_op:
        batch_op.drop_index('idx_survey_template_club')
        batch_op.drop_index('idx_survey_template_active')

    op.drop_table('survey_template')
    op.drop_table('club_compliance_status')
    # ### end Alembic commands ###
