services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      FLASK_APP: ${FLASK_APP}
      FLASK_ENV: ${FLASK_ENV}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST}
      FLASK_DEBUG: ${FLASK_DEBUG}
      DATABASE_URL: ${DATABASE_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_COGNITO_REGION: ${AWS_COGNITO_REGION}
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID}
      AWS_COGNITO_CLIENT_ID: ${AWS_COGNITO_CLIENT_ID}
      AWS_COGNITO_CLIENT_SECRET: ${AWS_COGNITO_CLIENT_SECRET}
      COGNITO_DOMAIN: ${COGNITO_DOMAIN}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_SES_REGION: ${AWS_SES_REGION}
      AWS_SES_SENDER: ${AWS_SES_SENDER}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - .:/app
      - dist_volume:/app/app/static/dist
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client:/app
      - /app/node_modules
      - dist_volume:/app/dist
    entrypoint: >
      /bin/sh -c "
        npm run build &&
        mkdir -p /app/app/static/dist &&
        cp -r /app/dist/* /app/app/static/dist/ &&
        tail -f /dev/null
      "

volumes:
  dist_volume: