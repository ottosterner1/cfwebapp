services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      FLASK_APP: ${FLASK_APP}
      FLASK_ENV: ${FLASK_ENV}
      FLASK_DEBUG: ${FLASK_DEBUG}
      DATABASE_URL: ${DATABASE_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_COGNITO_REGION: ${AWS_COGNITO_REGION}
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID}
      AWS_COGNITO_CLIENT_ID: ${AWS_COGNITO_CLIENT_ID}
      AWS_COGNITO_CLIENT_SECRET: ${AWS_COGNITO_CLIENT_SECRET}
      COGNITO_DOMAIN: ${COGNITO_DOMAIN}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_SES_REGION: ${AWS_SES_REGION}
      AWS_SES_SENDER: ${AWS_SES_SENDER}
      SERVER_NAME: "cfwebapp.local"
    extra_hosts:
      - "cfwebapp.local:host-gateway"
    volumes:
      - .:/app
      - dist-volume:/app/app/static/dist
      - ./certs:/app/certs
    ports:
      - "443:443"
    networks:
      app_net:
        aliases:
          - cfwebapp.local

  frontend:
      build:
        context: ./client
        dockerfile: Dockerfile.dev
      environment:
        - NODE_ENV=development
        - VITE_API_URL=https://cfwebapp.local
      volumes:
        - ./client:/app
        - dist-volume:/app/app/static/dist
        - /app/node_modules  # This creates an anonymous volume for node_modules
      ports:
        - "5173:5173"
      command: >
        sh -c "
          mkdir -p /app/app/static/dist &&
          chmod -R 777 /app/app/static/dist &&
          npm install moment react-big-calendar &&
          npm install --save-dev @types/react-big-calendar &&
          npm run build &&
          cp -r /app/dist/* /app/app/static/dist/ &&
          [ -d /app/dist/.vite ] && cp -r /app/dist/.vite /app/app/static/dist/ || true &&
          npm run dev -- --host
        "
      networks:
        app_net:
      extra_hosts:
        - "cfwebapp.local:host-gateway"

volumes:
  dist-volume:

networks:
  app_net:
    driver: bridge